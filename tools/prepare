#!/usr/bin/env bash

set -eux

# Make sure we have all packages downloaded.
flutter pub get

tools/prepare-toxcore

# Generate the FFI bindings.
if [ "${RUNNER_OS:-}" != "Windows" ]; then
  if which clang; then
    export CPATH="$(clang -v 2>&1 | grep "Selected GCC installation" | rev | cut -d' ' -f1 | rev)/include"
  elif which gcc; then
    export CPATH="$(: | gcc -E -Wp,-v - 2>&1 | grep -A1 '#include <...> search starts here:' | tail -n1 | xargs)"
  else
    echo "WARNING: Neither clang nor gcc found. Not generating FFI bindings."
  fi
fi

if [ -n "${CPATH:-}" ] || [ "${RUNNER_OS:-}" = "Windows" ]; then
  dart run ffigen
  sed \
    -e 's|dart:ffi|package:wasm_ffi/ffi.dart|g' \
    -e 's|ignore_for_file: type=lint|ignore_for_file: type=lint, subtype_of_sealed_class|' \
    -e 's|ffi\.Bool|ffi.Int8|g' \
    -e 's|ffi\.Char|ffi.Int8|g' \
    -e 's|ffi\.Size|ffi.Uint32|g' \
    -e 's|ffi\.UnsignedInt|ffi.Uint32|g' \
    lib/ffi/generated/toxcore.ffi.dart \
    >lib/ffi/generated/toxcore.js.dart
fi

# Generate the database (drift) code.
dart run build_runner build --delete-conflicting-outputs
